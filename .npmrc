# public-hoist-pattern[]=*webpack*#
# @module-federation:registry=https://r.privjs.com

# https://pnpm.io/zh/npmrc#%E4%BE%9D%E8%B5%96%E6%8F%90%E5%8D%87%E8%AE%BE%E7%BD%AE

# 当 true，所有依赖项都被提升到 node_modules/.pnpm。
# hoist=true
# hoist-pattern 告诉 pnpm 哪些包应该被提升到 node_modules/.pnpm。 在默认情况下，所有的包都是被提升的，但是如果你知道只有一些有缺陷的包有幻影依赖关系， 您可以使用此选项来只提升有幻影依赖关系的包(推荐)。
#hoist-pattern[]=*eslint*
#hoist-pattern[]=*babel*
#hoist-pattern[]=typescript
# 同于 hoist-pattern 会把依赖提升到一个虚拟存储中的隐藏的模块目录中，public-hoist-pattern 将匹配的依赖提升至根模块目录中。 提升至根模块目录中意味着应用代码可以访问到幻影依赖，即使他们对解析策略做了不当的修改。
# public-hoist-pattern[]=*webpack*#
# public-hoist-pattern[]=["serve", "typescript", "eslint-config-custom", "prettier"]

public-hoist-pattern[]=*webpack*#
public-hoist-pattern[]=typescript
public-hoist-pattern[]=*types*
public-hoist-pattern[]=*eslint*
public-hoist-pattern[]=@prettier/plugin-*
public-hoist-pattern[]=*prettier-plugin-*
